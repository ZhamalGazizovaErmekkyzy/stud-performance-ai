import streamlit as st
import pandas as pd
import pyodbc
import io
import matplotlib.pyplot as plt
import seaborn as sns
from openpyxl import Workbook
from azure.ai.textanalytics import TextAnalyticsClient
from azure.core.credentials import AzureKeyCredential

# Azure AI –ø–∞—Ä–∞–º–µ—Ç—Ä–ª–µ—Ä—ñ
AZURE_AI_KEY = "5k96MSu2fN6fBVk8tWz9ijkteXyhaD7GrOWr3AZVM94ce5ZkPLVOJQQJ99BCACYeBjFXJ3w3AAAAACOGy7RA"
AZURE_AI_ENDPOINT = "https://teacherai.openai.azure.com/"

def authenticate_client():
    return TextAnalyticsClient(endpoint=AZURE_AI_ENDPOINT, credential=AzureKeyCredential(AZURE_AI_KEY))

client = authenticate_client()

# –§–∞–π–ª–¥—ã –∂“Ø–∫—Ç–µ—É
st.title("üìö –û“õ—É—à—ã–ª–∞—Ä–¥—ã“£ –æ“õ—É –∂–µ—Ç—ñ—Å—Ç—ñ–∫—Ç–µ—Ä—ñ–Ω —Ç–∞–ª–¥–∞—É")
uploaded_file = st.file_uploader("–§–∞–π–ª–¥—ã –∂“Ø–∫—Ç–µ“£—ñ–∑", type=["csv", "xlsx", "xls", "json", "txt"])

def load_file(uploaded_file):
    if uploaded_file is not None:
        file_type = uploaded_file.name.split('.')[-1]
        if file_type == 'csv':
            df = pd.read_csv(uploaded_file, encoding="utf-8")
        elif file_type in ['xls', 'xlsx']:
            df = pd.read_excel(uploaded_file)
        elif file_type == 'json':
            df = pd.read_json(uploaded_file)
        elif file_type == 'txt':
            df = pd.read_csv(uploaded_file, delimiter="\t")
        else:
            st.error("‚ùå “ö–æ–ª–¥–∞—É –∫”©—Ä—Å–µ—Ç—ñ–ª–º–µ–π—Ç—ñ–Ω —Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç—ã!")
            return None
        return df
    return None

def analyze_performance(data):
    data['–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª'] = data.iloc[:, 1:].mean(axis=1)
    recommendations = []
    for score in data['–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª']:
        if score >= 9:
            rec = "–ö–µ—Ä–µ–º–µ—Ç –Ω”ô—Ç–∏–∂–µ! –ñ–∞–ª“ì–∞—Å—Ç—ã—Ä–∞ –±–µ—Ä—ñ“£—ñ–∑!"
        elif score >= 7:
            rec = "–ñ–∞“õ—Å—ã! –ë—ñ—Ä–∞“õ –æ–¥–∞–Ω –¥–∞ –∂–∞“õ—Å–∞—Ä—Ç—É“ì–∞ –±–æ–ª–∞–¥—ã."
        elif score >= 5:
            rec = "“ö–æ—Å—ã–º—à–∞ –¥–∞–π—ã–Ω–¥–∞–ª—É “õ–∞–∂–µ—Ç."
        else:
            rec = "–¢—å—é—Ç–æ—Ä–ª—ã“õ –Ω–µ–º–µ—Å–µ “õ–æ—Å—ã–º—à–∞ —Å–∞–±–∞“õ—Ç–∞—Ä–¥—ã “õ–∞—Ä–∞—Å—Ç—ã—Ä—ã“£—ã–∑."
        recommendations.append(rec)
    data['“∞—Å—ã–Ω—ã—Å—Ç–∞—Ä'] = recommendations
    return data

def save_to_db(df):
    try:
        server = '–°–Ü–ó–î–Ü“¢_AZURE_SERVER'
        database = 'students_db'
        username = '–°–Ü–ó–î–Ü“¢_–õ–û–ì–ò–ù'
        password = '–°–Ü–ó–î–Ü“¢_“ö“∞–ü–ò–Ø –°”®–ó'
        conn_str = f'DRIVER={{SQL Server}};SERVER={server};DATABASE={database};UID={username};PWD={password}'
        conn = pyodbc.connect(conn_str)
        cursor = conn.cursor()
        for index, row in df.iterrows():
            cursor.execute("INSERT INTO students (name, average_score, recommendation) VALUES (?, ?, ?)",
                           row['–ê—Ç—ã'], row['–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª'], row['“∞—Å—ã–Ω—ã—Å—Ç–∞—Ä'])
        conn.commit()
        cursor.close()
        conn.close()
        st.success("‚úÖ –î–µ—Ä–µ–∫—Ç–µ—Ä SQL Database-–∫–µ —Å–∞“õ—Ç–∞–ª–¥—ã!")
    except Exception as e:
        st.error(f"‚ùå “ö–∞—Ç–µ: {e}")

def download_excel(df):
    output = io.BytesIO()
    workbook = Workbook()
    sheet = workbook.active
    for r_idx, row in enumerate(df.itertuples(index=False), start=1):
        for c_idx, value in enumerate(row, start=1):
            sheet.cell(row=r_idx, column=c_idx, value=value)
    workbook.save(output)
    return output.getvalue()

if uploaded_file:
    df = load_file(uploaded_file)
    if df is not None:
        result = analyze_performance(df)
        st.write("üìä –û“õ—É—à—ã–ª–∞—Ä–¥—ã“£ –æ“õ—É –∂–µ—Ç—ñ—Å—Ç—ñ–∫—Ç–µ—Ä—ñ–Ω —Ç–∞–ª–¥–∞—É:")
        st.dataframe(result)
        
        # –ì—Ä–∞—Ñ–∏–∫ “õ–æ—Å—É
        st.subheader("üìà –û—Ä—Ç–∞—à–∞ –±–∞–ª–ª –¥–∏–∞–≥—Ä–∞–º–º–∞—Å—ã")
        fig, ax = plt.subplots()
        sns.histplot(result['–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª'], bins=10, kde=True, ax=ax)
        ax.set_xlabel("–û—Ä—Ç–∞—à–∞ –±–∞–ª–ª")
        ax.set_ylabel("–û“õ—É—à—ã–ª–∞—Ä —Å–∞–Ω—ã")
        st.pyplot(fig)

        # SQL Database-–∫–µ —Å–∞“õ—Ç–∞—É
        if st.button("üíæ –î–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ SQL Database-–∫–µ —Å–∞“õ—Ç–∞—É"):
            save_to_db(result)

        # Excel –∂“Ø–∫—Ç–µ—É
        excel_data = download_excel(result)
        st.download_button(label="üì• Excel —Ñ–æ—Ä–º–∞—Ç—ã–Ω–¥–∞ –∂“Ø–∫—Ç–µ—É",
                           data=excel_data,
                           file_name="recommendations.xlsx",
                           mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet")
